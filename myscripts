#!/bin/bash
set -e
cd "$(dirname "$0")"

if [[ "$(uname)" == "Linux" ]]; then
    # Check if Debian-based distro
    if [[ -f "/etc/debian_version" ]]; then
        # Install required packages
        declare -a packages=(
            "python3"
            "python3-pip"
        )
        for package in "${packages[@]}"; do
            dpkg -s "$package" >/dev/null 2>&1 || {
                sudo apt-get update
                sudo apt-get install -y "$package"
            }
        done

    # Check if Arch-based distro
    elif [[ -f "/etc/arch-release" ]]; then
        function check_and_install {
            if ! pacman -Qi $1 >/dev/null; then
                echo "Package $1 is not installed."
                echo "Installing $1..."
                sudo pacman -S --noconfirm $1
            fi
        }
        check_and_install 'python'
    fi
elif [[ -n "${TERMUX_VERSION}" ]]; then
    if [[ ! -x "$(command -v python)" ]]; then
        pkg update
        pkg install -y python
    fi
fi

append_line_dedup() {
    touch "$1"
    # Remove the line if it exists and then append it
    if [[ -f "$1" ]] && grep -qF -- "$2" "$1"; then
        repl=$(printf '%s\n' "$2" | sed -e 's/[]\/$*.^[]/\\&/g')
        # If on mac, use sed -i '' instead of sed -i
        if [[ "$(uname)" == "Darwin" ]]; then
            sed -i '' "\%^$repl$%d" "$1"
        else
            sed -i "\%^$repl$%d" "$1"
        fi
    fi
    echo "$2" >>"$1"
}

append_line_dedup \
    "$HOME/.bashrc" \
    "export PATH=\"$(pwd)/bin:\$PATH\""

if [[ -n "$TERMUX_VERSION" ]]; then
    append_line_dedup \
        "$HOME/.bashrc" \
        '[[ "$(tty)" == "/dev/pts/0" ]] && $HOME/MyScripts/myscripts --startup'
fi

# Set terminal title
echo -ne '\033]0;MyTerminal\007'

# Default settings for FZF
export FZF_DEFAULT_OPTS='--layout=reverse'

[[ ! -d "$HOME/.venv/myscripts" ]] && python3 -m venv "$HOME/.venv/myscripts" --system-site-packages
source "$HOME/.venv/myscripts/bin/activate"

pip install -r requirements.txt >/dev/null
python myscripts.py "$@"
